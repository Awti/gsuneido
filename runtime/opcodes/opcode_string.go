// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package opcodes

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nop-0]
	_ = x[Pop-1]
	_ = x[Dup-2]
	_ = x[Swap-3]
	_ = x[Int-4]
	_ = x[Value-5]
	_ = x[True-6]
	_ = x[False-7]
	_ = x[Zero-8]
	_ = x[One-9]
	_ = x[MaxInt-10]
	_ = x[EmptyStr-11]
	_ = x[Load-12]
	_ = x[Store-13]
	_ = x[LoadLock-14]
	_ = x[StoreUnlock-15]
	_ = x[Dyload-16]
	_ = x[Global-17]
	_ = x[Get-18]
	_ = x[Put-19]
	_ = x[GetLock-20]
	_ = x[PutUnlock-21]
	_ = x[RangeTo-22]
	_ = x[RangeLen-23]
	_ = x[This-24]
	_ = x[Is-25]
	_ = x[Isnt-26]
	_ = x[Match-27]
	_ = x[MatchNot-28]
	_ = x[Lt-29]
	_ = x[Lte-30]
	_ = x[Gt-31]
	_ = x[Gte-32]
	_ = x[Add-33]
	_ = x[Sub-34]
	_ = x[Cat-35]
	_ = x[Mul-36]
	_ = x[Div-37]
	_ = x[Mod-38]
	_ = x[LeftShift-39]
	_ = x[RightShift-40]
	_ = x[BitOr-41]
	_ = x[BitAnd-42]
	_ = x[BitXor-43]
	_ = x[BitNot-44]
	_ = x[Not-45]
	_ = x[UnaryPlus-46]
	_ = x[UnaryMinus-47]
	_ = x[Or-48]
	_ = x[And-49]
	_ = x[Bool-50]
	_ = x[QMark-51]
	_ = x[In-52]
	_ = x[Jump-53]
	_ = x[JumpTrue-54]
	_ = x[JumpFalse-55]
	_ = x[JumpIs-56]
	_ = x[JumpIsnt-57]
	_ = x[Iter-58]
	_ = x[ForIn-59]
	_ = x[Throw-60]
	_ = x[Try-61]
	_ = x[Catch-62]
	_ = x[CallFuncDiscard-63]
	_ = x[CallFuncNoNil-64]
	_ = x[CallFuncNilOk-65]
	_ = x[CallMethDiscard-66]
	_ = x[CallMethNoNil-67]
	_ = x[CallMethNilOk-68]
	_ = x[Super-69]
	_ = x[Return-70]
	_ = x[ReturnNil-71]
	_ = x[Closure-72]
	_ = x[BlockBreak-73]
	_ = x[BlockContinue-74]
	_ = x[BlockReturn-75]
	_ = x[BlockReturnNil-76]
}

const _Opcode_name = "NopPopDupSwapIntValueTrueFalseZeroOneMaxIntEmptyStrLoadStoreLoadLockStoreUnlockDyloadGlobalGetPutGetLockPutUnlockRangeToRangeLenThisIsIsntMatchMatchNotLtLteGtGteAddSubCatMulDivModLeftShiftRightShiftBitOrBitAndBitXorBitNotNotUnaryPlusUnaryMinusOrAndBoolQMarkInJumpJumpTrueJumpFalseJumpIsJumpIsntIterForInThrowTryCatchCallFuncDiscardCallFuncNoNilCallFuncNilOkCallMethDiscardCallMethNoNilCallMethNilOkSuperReturnReturnNilClosureBlockBreakBlockContinueBlockReturnBlockReturnNil"

var _Opcode_index = [...]uint16{0, 3, 6, 9, 13, 16, 21, 25, 30, 34, 37, 43, 51, 55, 60, 68, 79, 85, 91, 94, 97, 104, 113, 120, 128, 132, 134, 138, 143, 151, 153, 156, 158, 161, 164, 167, 170, 173, 176, 179, 188, 198, 203, 209, 215, 221, 224, 233, 243, 245, 248, 252, 257, 259, 263, 271, 280, 286, 294, 298, 303, 308, 311, 316, 331, 344, 357, 372, 385, 398, 403, 409, 418, 425, 435, 448, 459, 473}

func (i Opcode) String() string {
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
