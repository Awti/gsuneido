// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package opcodes

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nop-0]
	_ = x[Pop-1]
	_ = x[Dup-2]
	_ = x[Swap-3]
	_ = x[Int-4]
	_ = x[Value-5]
	_ = x[True-6]
	_ = x[False-7]
	_ = x[Zero-8]
	_ = x[One-9]
	_ = x[MinusOne-10]
	_ = x[MaxInt-11]
	_ = x[EmptyStr-12]
	_ = x[Load-13]
	_ = x[Store-14]
	_ = x[LoadLock-15]
	_ = x[StoreUnlock-16]
	_ = x[Dyload-17]
	_ = x[Global-18]
	_ = x[Get-19]
	_ = x[Put-20]
	_ = x[GetLock-21]
	_ = x[PutUnlock-22]
	_ = x[RangeTo-23]
	_ = x[RangeLen-24]
	_ = x[This-25]
	_ = x[Is-26]
	_ = x[Isnt-27]
	_ = x[Match-28]
	_ = x[MatchNot-29]
	_ = x[Lt-30]
	_ = x[Lte-31]
	_ = x[Gt-32]
	_ = x[Gte-33]
	_ = x[Add-34]
	_ = x[Sub-35]
	_ = x[Cat-36]
	_ = x[Mul-37]
	_ = x[Div-38]
	_ = x[Mod-39]
	_ = x[LeftShift-40]
	_ = x[RightShift-41]
	_ = x[BitOr-42]
	_ = x[BitAnd-43]
	_ = x[BitXor-44]
	_ = x[BitNot-45]
	_ = x[Not-46]
	_ = x[UnaryPlus-47]
	_ = x[UnaryMinus-48]
	_ = x[Or-49]
	_ = x[And-50]
	_ = x[Bool-51]
	_ = x[QMark-52]
	_ = x[In-53]
	_ = x[Cover-54]
	_ = x[Jump-55]
	_ = x[JumpTrue-56]
	_ = x[JumpFalse-57]
	_ = x[JumpIs-58]
	_ = x[JumpIsnt-59]
	_ = x[Iter-60]
	_ = x[ForIn-61]
	_ = x[Throw-62]
	_ = x[Try-63]
	_ = x[Catch-64]
	_ = x[CallFuncDiscard-65]
	_ = x[CallFuncNoNil-66]
	_ = x[CallFuncNilOk-67]
	_ = x[CallMethDiscard-68]
	_ = x[CallMethNoNil-69]
	_ = x[CallMethNilOk-70]
	_ = x[Super-71]
	_ = x[Return-72]
	_ = x[ReturnNil-73]
	_ = x[Closure-74]
	_ = x[BlockBreak-75]
	_ = x[BlockContinue-76]
	_ = x[BlockReturn-77]
	_ = x[BlockReturnNil-78]
}

const _Opcode_name = "NopPopDupSwapIntValueTrueFalseZeroOneMinusOneMaxIntEmptyStrLoadStoreLoadLockStoreUnlockDyloadGlobalGetPutGetLockPutUnlockRangeToRangeLenThisIsIsntMatchMatchNotLtLteGtGteAddSubCatMulDivModLeftShiftRightShiftBitOrBitAndBitXorBitNotNotUnaryPlusUnaryMinusOrAndBoolQMarkInCoverJumpJumpTrueJumpFalseJumpIsJumpIsntIterForInThrowTryCatchCallFuncDiscardCallFuncNoNilCallFuncNilOkCallMethDiscardCallMethNoNilCallMethNilOkSuperReturnReturnNilClosureBlockBreakBlockContinueBlockReturnBlockReturnNil"

var _Opcode_index = [...]uint16{0, 3, 6, 9, 13, 16, 21, 25, 30, 34, 37, 45, 51, 59, 63, 68, 76, 87, 93, 99, 102, 105, 112, 121, 128, 136, 140, 142, 146, 151, 159, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 196, 206, 211, 217, 223, 229, 232, 241, 251, 253, 256, 260, 265, 267, 272, 276, 284, 293, 299, 307, 311, 316, 321, 324, 329, 344, 357, 370, 385, 398, 411, 416, 422, 431, 438, 448, 461, 472, 486}

func (i Opcode) String() string {
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
