// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package runtime

// active is the value type.

// ActiveList is a list of values
type ActiveList struct {
	list []active
}

// Push adds a active to the end of the list
func (il *ActiveList) Push(v active) {
	il.list = append(il.list, v)
}

// Pop removes the last element of the list
func (il *ActiveList) Pop() {
	var zero active
	il.list[len(il.list)-1] = zero // for gc
	il.list = il.list[:len(il.list)-1]
}

// Has returns true if the list contains
func (il *ActiveList) Has(v active) bool {
	for _, x := range il.list {
		if x.Equal(v) {
			return true
		}
	}
	return false
}

// Remove deletes the first occurence of a value
// and returns true if the value was found, otherwise false.
func (il *ActiveList) Remove(v active) bool {
	for i, x := range il.list {
		if x.Equal(v) {
			var zero active
			copy(il.list[i:], il.list[i+1:])
			il.list[len(il.list)-1] = zero // for gc
			il.list = il.list[:len(il.list)-1]
			return true
		}
	}
	return false
}
