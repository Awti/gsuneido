// Copyright Suneido Software Corp. All rights reserved.
// Governed by the MIT license found in the LICENSE file.

package query

import "github.com/apmckinlay/gsuneido/runtime"

// Nothing is a null query that produces no output.
// It results from a Join, Where, or Intersect with a Fixed conflict.
// It is not generated by the query parser.
type Nothing struct {
	cache
	columns []string
}

func NewNothing(columns []string) *Nothing {
	return &Nothing{columns: columns}
}

var _ Query = (*Nothing)(nil)

func (*Nothing) String() string {
	return "NOTHING"
}

func (no *Nothing) Transform() Query {
	return no
}

func (*Nothing) Columns() []string {
	return nil
}

func (*Nothing) Keys() [][]string {
	return [][]string{{}}
}

func (*Nothing) Indexes() [][]string {
	return [][]string{{}}
}

func (*Nothing) Nrows() int {
	return 0
}

func (*Nothing) rowSize() int {
	return 0
}

func (*Nothing) Ordering() []string {
	return nil
}

func (*Nothing) Fixed() []Fixed {
	return nil
}

func (*Nothing) Updateable() string {
	return "nothing"
}

func (*Nothing) SingleTable() bool {
	return true
}

func (*Nothing) SetTran(QueryTran) {
}

func (*Nothing) optimize(Mode, []string) (Cost, any) {
	return 0, nil
}

func (*Nothing) setApproach(_ []string, _ any, _ QueryTran) {
}

func (*Nothing) lookupCost() Cost {
	return 0
}

func (*Nothing) Lookup(*runtime.Thread, []string, []string) runtime.Row {
	return nil
}

func (no *Nothing) Header() *runtime.Header {
	return runtime.SimpleHeader(no.columns)
}

func (*Nothing) Output(*runtime.Thread, runtime.Record) {
	panic("can't Output to nil query")
}

func (*Nothing) Get(*runtime.Thread, runtime.Dir) runtime.Row {
	return nil
}

func (*Nothing) Rewind() {
}

func (*Nothing) Select([]string, []string) {
}
